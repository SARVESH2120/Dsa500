 public static void Array1() {
        int[] marks = new int[10];
        marks[0] = 10;
        marks[2] = 56;
        marks[5] = 87;

        System.out.println(marks[0]);
        System.out.println(marks[3]);
        System.out.println(marks[5]);
        System.out.println(marks); // Memory Address
    }

    public static void FloatArray2() {
        float[] arr = new float[5];
        arr[0] = 23.32f;
        arr[2] = 332.32f;
        System.out.println(arr[0]);
        System.out.println(arr.length);
    }

    public static void StringArray() {
        String[] names = { "Lufffy", "Zoro", "Sanji" };
        System.out.println(names[0]);
        System.out.println(names[1]);
        System.out.println(names[2]);
    }

    public static void ArrayInput() {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = sc.nextInt();
        }
        for (int i = 0; i < arr.length; i++) {
            System.out.println("At Index " + i + " Value is " + arr[i]);
        }
    }

    public static void LinearSearch() {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the no. of element");
        int n = sc.nextInt();
        int[] arr = new int[n];
        System.out.println("Enter the number");
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        System.out.println("Enter the key");
        int key = sc.nextInt();
        int ans = -1;

        for (int i = 0; i < n; i++) {
            if (arr[i] == key) {
                ans = i;
                break;
            }
        }
        System.out.println(ans);
    }

    public static void SquareValueArray() {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        for (int x : arr) {
            System.out.print(x * x);
        }
    }


  public static void FindLargestElementinArray(int[] arr) {
        int largest = arr[0];
        for (int i = 0; i < arr.length; i++) {
            if (largest < arr[i]) {
                largest = arr[i];
            }
        }
        System.out.println(largest);
    }

    public static void FindTheSmallestElementInArray(int[] arr) {
        int minimum = arr[0];
        for (int i = 0; i < arr.length; i++) {
            if (minimum > arr[i]) {
                minimum = arr[i];
            }
        }
        System.out.println(minimum);
    }

    public static void FindSmallestandLargestElement(int[] arr) {
        int largest = Integer.MIN_VALUE;
        int smallest = Integer.MAX_VALUE;
        for (int i = 0; i < arr.length; i++) {
            if (largest < arr[i]) {
                largest = arr[i];
            }
            if (smallest > arr[i]) {
                smallest = arr[i];
            }
        }
        System.out.println(largest);
        System.out.println(smallest);
    }



    public static void SumOFElementinArr(int[] arr) {
        int sum = 0;
        for (int x : arr) {
            sum += x;
        }
        System.out.println(sum);
    }

    public static void ReverseArray(int[] arr) {
        // Method-1
        // int n = arr.length;
        // for(int i = n-1 ; i>=0 ; i--){
        // System.out.print(arr[i] + "");
        // }
        // Method-2
        int n = arr.length;
        int start = 0;
        int end = n - 1;
        while (start < end) {
            int temp = arr[start];
            arr[start] = arr[end];
            arr[end] = temp;
            start++;
            end--;
        }
        for (int i = 0; i < n; i++) {
            System.out.println(arr[i] + "");
        }
    }

    public static void SortArrayInTwoPart(int[] arr) {
        int n = arr.length;
        int temp;
        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n / 2; j++) {
                if (arr[j] > arr[j + 1]) {
                    temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;

                }
            }
            for (int j = n / 2; j < n - 1; j++) {
                if (arr[j] < arr[j + 1]) {
                    temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
        }
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
    }

    public static void SortArrayInTwoPart2(int[] arr) {
        int n = arr.length;
        Arrays.sort(arr);
        for (int i = 0; i < n / 2; i++) {
            System.out.print(arr[i] + " ");
        }
        for (int j = n - 1; j >= n / 2; j--) {
            System.out.print(arr[j] + " ");
        }
    }

    public static void SortingArray(int[] arr) {
        int n = arr.length;
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                if (arr[i] > arr[j]) {
                    int temp = arr[i];
                    arr[j] = arr[i];
                    arr[j] = temp;
                }
            }
            System.out.print(arr[i] + " ");
        }
    }


